[
  {
    "id": "sd_001",
    "type": "mcq",
    "question": "What is the main difference between supervised and unsupervised learning?",
    "options": ["Requires labeled data", "Always uses neural networks", "Only clustering", "No evaluation metrics"],
    "correctAnswer": "Requires labeled data",
    "explanation": "Supervised learning uses labeled examples, while unsupervised uses unlabeled data :contentReference[oaicite:1]{index=1}.",
    "domain": "ML Fundamentals",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["supervised","unsupervised"],
    "skillTags": ["conceptual"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_002",
    "type": "mcq",
    "question": "Which scenario describes high bias?",
    "options": ["Overly simple model with underfitting", "Overly complex model", "Using too much data", "Perfect generalization"],
    "correctAnswer": "Overly simple model with underfitting",
    "explanation": "High bias means the model is too simple and underfits :contentReference[oaicite:2]{index=2}.",
    "domain": "ML Fundamentals",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["bias","underfitting"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_003",
    "type": "mcq",
    "question": "What does high variance imply?",
    "options": ["Overfitting to training data", "Underfitting", "No model training", "Perfect model"],
    "correctAnswer": "Overfitting to training data",
    "explanation": "High variance models learn noise and generalize poorly :contentReference[oaicite:3]{index=3}.",
    "domain": "ML Fundamentals",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["variance","overfitting"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_004",
    "type": "mcq",
    "question": "Why use cross-validation?",
    "options": ["Prevents overfitting", "Increases bias", "Removes labels", "Encrypts data"],
    "correctAnswer": "Prevents overfitting",
    "explanation": "Cross-validation provides robust estimates to avoid overfitting :contentReference[oaicite:4]{index=4}.",
    "domain": "ML Fundamentals",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["cross-validation"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_005",
    "type": "scenario",
    "question": "Your model performs well on training but poorly on validation. What’s happening?",
    "options": ["Overfitting", "Underfitting", "Good generalization", "Data leakage"],
    "correctAnswer": "Overfitting",
    "explanation": "High train accuracy with low validation accuracy indicates overfitting :contentReference[oaicite:5]{index=5}.",
    "domain": "ML Fundamentals",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["overfitting"],
    "skillTags": ["problem-solving"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_006",
    "type": "mcq",
    "question": "Which method handles missing numeric values best?",
    "options": ["Mean imputation", "Drop feature", "String encoding", "Encrypt data"],
    "correctAnswer": "Mean imputation",
    "explanation": "Mean fills missing numeric entries effectively when data is MCAR.",
    "domain": "Data Preprocessing",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["imputation"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_007",
    "type": "mcq",
    "question": "When to normalize data?",
    "options": ["Before similarity-based models", "After train-test split", "Only for categorical data", "Never"],
    "correctAnswer": "Before similarity-based models",
    "explanation": "Normalization ensures equal feature scale for KNN, SVM, etc.",
    "domain": "Data Preprocessing",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["normalization"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_008",
    "type": "mcq",
    "question": "Which metric balances precision and recall?",
    "options": ["F1-score", "Accuracy", "ROC-AUC", "Mean Squared Error"],
    "correctAnswer": "F1-score",
    "explanation": "F1-score is the harmonic mean of precision and recall.",
    "domain": "Model Training & Evaluation",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["F1-score"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_009",
    "type": "scenario",
    "question": "With imbalanced classes, which metric is best?",
    "options": ["ROC-AUC", "Accuracy", "Mean Error", "Computation time"],
    "correctAnswer": "ROC-AUC",
    "explanation": "ROC-AUC is robust to class imbalance and captures model discrimination.",
    "domain": "Model Training & Evaluation",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["ROC-AUC","imbalanced data"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_010",
    "type": "mcq",
    "question": "Which algorithm is best for classification tasks?",
    "options": ["Logistic Regression", "PCA", "K-means", "Linear Regression"],
    "correctAnswer": "Logistic Regression",
    "explanation": "Logistic Regression is a go-to model for binary classification.",
    "domain": "Algorithms & Techniques",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["Logistic Regression"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_011",
    "type": "scenario",
    "question": "Choosing SVM over linear regression – why?",
    "options": ["Data not linearly separable", "Fewer features", "Always faster", "No tuning"],
    "correctAnswer": "Data not linearly separable",
    "explanation": "SVM with kernels can handle non-linear patterns.",
    "domain": "Algorithms & Techniques",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["SVM","classification"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_012",
    "type": "mcq",
    "question": "What activation function gives output between 0 and 1?",
    "options": ["Sigmoid", "ReLU", "Tanh", "Linear"],
    "correctAnswer": "Sigmoid",
    "explanation": "Sigmoid squashes input values into [0,1].",
    "domain": "Deep Learning Basics",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["Sigmoid","activation"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_013",
    "type": "scenario",
    "question": "When deep network doesn't converge, which optimizer to try?",
    "options": ["Adam", "Plain Gradient Descent", "Random Search", "PCA"],
    "correctAnswer": "Adam",
    "explanation": "Adam adapts learning rates per parameter, speeding convergence.",
    "domain": "Deep Learning Basics",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["Adam","optimization"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_014",
    "type": "mcq",
    "question": "Which library is Python-based for ML?",
    "options": ["scikit-learn", "Django", "React", "Flask"],
    "correctAnswer": "scikit-learn",
    "explanation": "Scikit-learn is a core Python library for classical ML.",
    "domain": "Libraries & Frameworks",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["scikit-learn"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_015",
    "type": "short-answer",
    "question": "Define overfitting in ML.",
    "correctAnswer": "When a model fits noise in training data, performing poorly on new data.",
    "explanation": "Overfitting is low bias, high variance; generalizes poorly outside training set :contentReference[oaicite:6]{index=6}.",
    "domain": "ML Fundamentals",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["overfitting"],
    "skillTags": ["conceptual"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "short-text",
    "timeLimitSeconds": 90,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_016",
    "type": "scenario",
    "question": "Your neural network training plateaus with Adam but SGD improves—what’s the issue?",
    "options": ["Learning rate issues with Adam", "SGD converges faster always", "Batch size too large", "Wrong activation function"],
    "correctAnswer": "Learning rate issues with Adam",
    "explanation": "Adam can fail to converge with certain hyperparameters; adjusting β₂ or learning rate often fixes it :contentReference[oaicite:1]{index=1}.",
    "domain": "Deep Learning Basics",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["Adam","optimizer"],
    "skillTags": ["analysis"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_017",
    "type": "mcq",
    "question": "Normalization scales data to which range?",
    "options": ["[0,1] or [-1,1]", "[mean=0, std=1]", "[0,∞)", "[-∞,∞]"],
    "correctAnswer": "[0,1] or [-1,1]",
    "explanation": "Normalization (min–max scaling) maps features to a range like [0,1] or [-1,1] :contentReference[oaicite:2]{index=2}.",
    "domain": "Data Preprocessing",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["normalization"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_018",
    "type": "mcq",
    "question": "Standardization transforms data to have:",
    "options": ["Mean=0 and SD=1", "Min=0 and Max=1", "All values positive", "Sum=1"],
    "correctAnswer": "Mean=0 and SD=1",
    "explanation": "Standardization centers data at zero mean and unit variance :contentReference[oaicite:3]{index=3}.",
    "domain": "Data Preprocessing",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["standardization"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_019",
    "type": "mcq",
    "question": "Why choose standardization over normalization?",
    "options": [
      "Handles outliers better and centers data",
      "Reduces dataset size",
      "Removes negative values",
      "Makes data quantized"
    ],
    "correctAnswer": "Handles outliers better and centers data",
    "explanation": "Standardization is less sensitive to outliers and scales data around mean :contentReference[oaicite:4]{index=4}.",
    "domain": "Data Preprocessing",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["normalization","standardization"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_020",
    "type": "mcq",
    "question": "Which transform suits distance-based models like KNN?",
    "options": ["Normalization", "Binarization", "Log scaling", "None"],
    "correctAnswer": "Normalization",
    "explanation": "Distance-based methods need equal-scale features, which normalization provides :contentReference[oaicite:5]{index=5}.",
    "domain": "Data Preprocessing",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["normalization","scaling"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_021",
    "type": "scenario",
    "question": "You want faster convergence in gradient descent. What should you do?",
    "options": ["Normalize or standardize features", "Delete all zeros", "Increase labels", "Use more layers"],
    "correctAnswer": "Normalize or standardize features",
    "explanation": "Feature scaling speeds up convergence and improves regularization performance :contentReference[oaicite:6]{index=6}.",
    "domain": "Data Preprocessing",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["feature scaling"],
    "skillTags": ["problem-solving"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_022",
    "type": "mcq",
    "question": "What problem does Adam address compared to vanilla SGD?",
    "options": ["Adaptive step sizes", "Overfitting", "Lack of neurons", "Database lock"],
    "correctAnswer": "Adaptive step sizes",
    "explanation": "Adam adapts learning rates per parameter using moment estimates :contentReference[oaicite:7]{index=7}.",
    "domain": "Deep Learning Basics",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["Adam","optimization"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_023",
    "type": "mcq",
    "question": "Which activation is best for binary classification output?",
    "options": ["Sigmoid", "ReLU", "Tanh", "Softmax"],
    "correctAnswer": "Sigmoid",
    "explanation": "Sigmoid output maps to [0,1], suitable for binary probability estimation.",
    "domain": "Deep Learning Basics",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["Sigmoid","activation"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_024",
    "type": "scenario",
    "question": "Large dataset with many redundant features—what to try?",
    "options": ["PCA", "Random forest", "Add layers", "SGD"],
    "correctAnswer": "PCA",
    "explanation": "PCA reduces dimensionality by extracting principal components.",
    "domain": "Feature Engineering",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["PCA"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_025",
    "type": "mcq",
    "question": "Which metric balances precision and recall?",
    "options": ["F1-score", "Accuracy", "RMSE", "LogLoss"],
    "correctAnswer": "F1-score",
    "explanation": "F1 is the harmonic mean of precision and recall.",
    "domain": "Model Training & Evaluation",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["F1-score"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_026",
    "type": "scenario",
    "question": "Data is highly imbalanced—what metric to choose?",
    "options": ["ROC-AUC", "MSE", "Accuracy", "Entropy"],
    "correctAnswer": "ROC-AUC",
    "explanation": "ROC-AUC is more informative than accuracy on imbalanced data.",
    "domain": "Model Training & Evaluation",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["ROC-AUC","imbalanced data"],
    "skillTags": ["analysis"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_027",
    "type": "mcq",
    "question": "Which Python library is used for logistic regression?",
    "options": ["scikit-learn", "Django", "TensorFlow", "Flask"],
    "correctAnswer": "scikit-learn",
    "explanation": "Scikit‑learn provides easy APIs for logistic regression models.",
    "domain": "Libraries & Frameworks",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["scikit-learn"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_028",
    "type": "scenario",
    "question": "Deploy model with REST API—use?",
    "options": ["Flask/FastAPI", "Excel", "Arduino", "Word"],
    "correctAnswer": "Flask/FastAPI",
    "explanation": "Flask and FastAPI help serve models via HTTP endpoints in production.",
    "domain": "Model Deployment & MLOps",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["Flask","MLOps"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_029",
    "type": "mcq",
    "question": "Ethical ML requires?",
    "options": ["Fairness and explainability", "Just accuracy", "Speed only", "One model suits all"],
    "correctAnswer": "Fairness and explainability",
    "explanation": "Responsible ML includes fairness and interpretability, not just performance.",
    "domain": "Ethics & Fairness",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["fairness","interpretability"],
    "skillTags": ["conceptual"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": false,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_030",
    "type": "short-answer",
    "question": "Define overfitting.",
    "correctAnswer": "A model performs well on training data but poorly on unseen data due to capturing noise.",
    "explanation": "Overfitting happens when variance is high and generalization is poor :contentReference[oaicite:8]{index=8}.",
    "domain": "ML Fundamentals",
    "careerTags": ["ml_engineer"],
    "conceptTags": ["overfitting"],
    "skillTags": ["conceptual"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "short-text",
    "timeLimitSeconds": 90,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  }
]
