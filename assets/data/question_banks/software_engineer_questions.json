[
  {
    "id": "sd_001",
    "type": "mcq",
    "question": "Which pillar of OOP restricts direct access to an object's internal state?",
    "options": ["Encapsulation", "Inheritance", "Abstraction", "Polymorphism"],
    "correctAnswer": "Encapsulation",
    "explanation": "Encapsulation hides data inside a class and exposes only necessary operations :contentReference[oaicite:1]{index=1}.",
    "domain": "Object-Oriented Programming",
    "careerTags": ["software_engineer"],
    "conceptTags": ["encapsulation"],
    "skillTags": ["conceptual"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_002",
    "type": "mcq",
    "question": "Which OOP principle lets subclasses define specific behaviors while sharing a common interface?",
    "options": ["Polymorphism", "Abstraction", "Encapsulation", "Inheritance"],
    "correctAnswer": "Polymorphism",
    "explanation": "Polymorphism allows different implementations behind a shared interface :contentReference[oaicite:2]{index=2}.",
    "domain": "Object-Oriented Programming",
    "careerTags": ["software_engineer"],
    "conceptTags": ["polymorphism"],
    "skillTags": ["conceptual"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_003",
    "type": "mcq",
    "question": "What’s the key difference between an abstract class and an interface in UML?",
    "options": [
      "Abstract classes can have implementations; interfaces cannot",
      "Interfaces can have attributes; abstract classes cannot",
      "Interfaces can be instantiated",
      "Abstract classes allow multiple inheritance"
    ],
    "correctAnswer": "Abstract classes can have implementations; interfaces cannot",
    "explanation": "Abstract classes may have concrete methods; interfaces define only signatures :contentReference[oaicite:3]{index=3}.",
    "domain": "Object-Oriented Programming",
    "careerTags": ["software_engineer"],
    "conceptTags": ["interfaces","abstract classes"],
    "skillTags": ["conceptual"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_004",
    "type": "mcq",
    "question": "What does inheritance in OOP primarily promote?",
    "options": ["Code reuse", "Dynamic typing", "Garbage collection", "Manual memory management"],
    "correctAnswer": "Code reuse",
    "explanation": "Inheritance enables subclasses to reuse code from parent classes :contentReference[oaicite:4]{index=4}.",
    "domain": "Object-Oriented Programming",
    "careerTags": ["software_engineer"],
    "conceptTags": ["inheritance"],
    "skillTags": ["conceptual"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_005",
    "type": "scenario",
    "question": "You need to design a class hierarchy for shapes (Circle, Square). Which UML element should capture shared operations?",
    "options": [
      "Concrete class",
      "Interface or abstract class",
      "Enum type",
      "Simple struct"
    ],
    "correctAnswer": "Interface or abstract class",
    "explanation": "Use an interface or abstract class to define shared contracts in UML :contentReference[oaicite:5]{index=5}.",
    "domain": "Object-Oriented Programming",
    "careerTags": ["software_engineer"],
    "conceptTags": ["UML","interfaces","abstract classes"],
    "skillTags": ["design"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_006",
    "type": "mcq",
    "question": "Which data structure is best for FIFO behavior?",
    "options": ["Stack", "Queue", "HashMap", "Heap"],
    "correctAnswer": "Queue",
    "explanation": "Queues operate in First‑In‑First‑Out order.",
    "domain": "Data Structures & Algorithms",
    "careerTags": ["software_engineer"],
    "conceptTags": ["queues"],
    "skillTags": ["conceptual"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_007",
    "type": "mcq",
    "question": "What is the average-case time complexity of quicksort?",
    "options": ["O(n^2)", "O(n log n)", "O(n)", "O(log n)"],
    "correctAnswer": "O(n log n)",
    "explanation": "Quicksort runs in O(n log n) time on average.",
    "domain": "Data Structures & Algorithms",
    "careerTags": ["software_engineer"],
    "conceptTags": ["sorting"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_008",
    "type": "scenario",
    "question": "Design a service to store high-write, low-latency data. Which DB type suits better?",
    "options": ["Relational SQL", "Document NoSQL", "Graph DB", "In-memory cache"],
    "correctAnswer": "Document NoSQL",
    "explanation": "NoSQL document stores are ideal for scalable, schema-flexible, high-write systems.",
    "domain": "Database Management",
    "careerTags": ["software_engineer"],
    "conceptTags": ["NoSQL","MongoDB"],
    "skillTags": ["problem-solving"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 55,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_009",
    "type": "output",
    "question": "What does this Python code print?\n```python\narr=[3,1,2]\nprint(sorted(arr))\n```",
    "correctAnswer": "[1, 2, 3]",
    "explanation": "`sorted()` returns a new sorted list.",
    "domain": "Data Structures & Algorithms",
    "careerTags": ["software_engineer"],
    "conceptTags": ["sorting"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "code",
    "answerType": "short-text",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": true,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_010",
    "type": "mcq",
    "question": "What is ACID's 'I' property in databases?",
    "options": ["Indexing", "Isolation", "Integrity", "Iteration"],
    "correctAnswer": "Isolation",
    "explanation": "Isolation ensures concurrently running transactions don't interfere.",
    "domain": "Database Management",
    "careerTags": ["software_engineer"],
    "conceptTags": ["ACID","transactions"],
    "skillTags": ["conceptual"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_011",
    "type": "scenario",
    "question": "Client-side fetch of REST API fails due to CORS. You should:",
    "options": ["Modify server headers", "Disable browser CORS", "Use HTTP not HTTPS", "Change client IP"],
    "correctAnswer": "Modify server headers",
    "explanation": "CORS requires proper response headers (e.g., Access-Control-Allow-Origin).",
    "domain": "Web Development Fundamentals",
    "careerTags": ["software_engineer"],
    "conceptTags": ["CORS","HTTP"],
    "skillTags": ["problem-solving"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_012",
    "type": "mcq",
    "question": "Which SDLC model emphasizes short iterations and feedback?",
    "options": ["Waterfall", "Scrum", "Spiral", "V-Model"],
    "correctAnswer": "Scrum",
    "explanation": "Scrum breaks down delivery into sprints with frequent reviews.",
    "domain": "Software Development Lifecycle",
    "careerTags": ["software_engineer"],
    "conceptTags": ["Scrum","Agile"],
    "skillTags": ["conceptual"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_013",
    "type": "debug",
    "question": "Fix this JUnit test that always passes:\n```java\n@Test\npublic void testAdd(){assertTrue(add(2,2)==5);} \n```",
    "correctAnswer": "Change expected to 4: assertEquals(4, add(2,2));",
    "explanation": "The assertion should verify correct result (4), not incorrect value (5).",
    "domain": "Testing & Debugging",
    "careerTags": ["software_engineer"],
    "conceptTags": ["JUnit","unit test"],
    "skillTags": ["debugging"],
    "difficulty": "Medium",
    "format": "code",
    "answerType": "short-text",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": true,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_014",
    "type": "mcq",
    "question": "Which Git command shows log of commits?",
    "options": ["git log", "git show", "git history", "git status"],
    "correctAnswer": "git log",
    "explanation": "`git log` displays commit history with messages and metadata.",
    "domain": "Version Control & Collaboration",
    "careerTags": ["software_engineer"],
    "conceptTags": ["git","history"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_015",
    "type": "scenario",
    "question": "Your shell script fails due to permission denied. Most likely fix?",
    "options": [
      "Run chmod +x on the script",
      "Use Python script",
      "Disable permission checks",
      "Rename file extension"
    ],
    "correctAnswer": "Run chmod +x on the script",
    "explanation": "Scripts need executable permission set before running.",
    "domain": "Operating Systems & Fundamentals",
    "careerTags": ["software_engineer"],
    "conceptTags": ["shell scripting","permissions"],
    "skillTags": ["problem-solving"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_016",
    "type": "scenario",
    "question": "Designing a RESTful endpoint for creating user accounts; which HTTP code should you return on successful creation?",
    "options": ["200 OK", "201 Created", "204 No Content", "202 Accepted"],
    "correctAnswer": "201 Created",
    "explanation": "Use 201 Created when a new resource is successfully created.",
    "domain": "Web Development Fundamentals",
    "careerTags": ["software_engineer"],
    "conceptTags": ["REST API", "HTTP"],
    "skillTags": ["software engineering"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_017",
    "type": "mcq",
    "question": "Which data structure uses LIFO access pattern?",
    "options": ["Queue", "Stack", "Linked List", "Hash Map"],
    "correctAnswer": "Stack",
    "explanation": "Stacks follow Last-In, First-Out ordering.",
    "domain": "Data Structures & Algorithms",
    "careerTags": ["software_engineer"],
    "conceptTags": ["stacks"],
    "skillTags": ["conceptual"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 30,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_018",
    "type": "output",
    "question": "What does this Python snippet output?\n```python\ndef fib(n): return n if n < 2 else fib(n-1) + fib(n-2)\nprint(fib(5))\n```",
    "correctAnswer": "5",
    "explanation": "The 5th Fibonacci number (0-based) is 5.",
    "domain": "Data Structures & Algorithms",
    "careerTags": ["software_engineer"],
    "conceptTags": ["recursion"],
    "skillTags": ["problem-solving"],
    "difficulty": "Medium",
    "format": "code",
    "answerType": "short-text",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": true,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_019",
    "type": "scenario",
    "question": "Your service needs low-latency lookups and updates. Which data store suits best?",
    "options": ["Relational DB", "In-memory cache (e.g., Redis)", "File system", "Graph DB"],
    "correctAnswer": "In-memory cache (e.g., Redis)",
    "explanation": "Caches like Redis provide ultra-fast access for frequent small operations.",
    "domain": "System Design Basics",
    "careerTags": ["software_engineer"],
    "conceptTags": ["caching", "scalability"],
    "skillTags": ["design"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_020",
    "type": "mcq",
    "question": "In SQL, which JOIN returns only matching rows from both tables?",
    "options": ["LEFT JOIN", "RIGHT JOIN", "INNER JOIN", "FULL OUTER JOIN"],
    "correctAnswer": "INNER JOIN",
    "explanation": "INNER JOIN selects records with matching keys on both sides.",
    "domain": "Database Management",
    "careerTags": ["software_engineer"],
    "conceptTags": ["SQL", "joins"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_021",
    "type": "mcq",
    "question": "Which CORS header allows cross-origin requests?",
    "options": ["Access-Control-Allow-Origin", "Content-Security-Policy", "X-Frame-Options", "Referrer-Policy"],
    "correctAnswer": "Access-Control-Allow-Origin",
    "explanation": "This header specifies permitted origins for cross-origin access.",
    "domain": "Web Development Fundamentals",
    "careerTags": ["software_engineer"],
    "conceptTags": ["CORS", "security"],
    "skillTags": ["software engineering"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_022",
    "type": "scenario",
    "question": "Your team follows TDD. What do you do first when adding a feature?",
    "options": ["Write code", "Write failing test", "Refactor code", "Release to prod"],
    "correctAnswer": "Write failing test",
    "explanation": "TDD cycle: write failing test → implementation → refactor.",
    "domain": "Software Development Lifecycle",
    "careerTags": ["software_engineer"],
    "conceptTags": ["TDD", "Agile"],
    "skillTags": ["software engineering"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_023",
    "type": "debug",
    "question": "Fix this Java unit test asserting wrong value:\n```java\nassertEquals(5, sum(2,3));\n```",
    "correctAnswer": "Change expected value to 5 (correct) or correct sum logic if wrong",
    "explanation": "Ensure expected value matches sum logic.",
    "domain": "Testing & Debugging",
    "careerTags": ["software_engineer"],
    "conceptTags": ["JUnit", "unit test"],
    "skillTags": ["debugging"],
    "difficulty": "Easy",
    "format": "code",
    "answerType": "short-text",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": true,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_024",
    "type": "mcq",
    "question": "Which Git command resolves a merge conflict with interactive tool?",
    "options": ["git merge --abort", "git mergetool", "git conflict", "git rebase"],
    "correctAnswer": "git mergetool",
    "explanation": "`git mergetool` opens configured diff/merge tool for resolution.",
    "domain": "Version Control & Collaboration",
    "careerTags": ["software_engineer"],
    "conceptTags": ["git", "merge conflicts"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_025",
    "type": "scenario",
    "question": "Your script leaks memory by not closing file. How to fix?",
    "options": ["Use try-with-resources or finally block", "Ignore the leak", "Run garbage collector manually", "Use global variables"],
    "correctAnswer": "Use try-with-resources or finally block",
    "explanation": "Ensure resource cleanup to avoid leaks, e.g., try-with-resources in Java.",
    "domain": "Operating Systems & Fundamentals",
    "careerTags": ["software_engineer"],
    "conceptTags": ["file I/O", "memory management"],
    "skillTags": ["debugging"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 55,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_026",
    "type": "output",
    "question": "What does this C++ code print?\n```cpp\nint x=5;\nif(x==5) cout<<\"A\"; else cout<<\"B\";\n```",
    "correctAnswer": "A",
    "explanation": "Condition is true so it prints \"A\".",
    "domain": "Problem Solving & Analytical Thinking",
    "careerTags": ["software_engineer"],
    "conceptTags": ["control flow"],
    "skillTags": ["problem-solving"],
    "difficulty": "Easy",
    "format": "code",
    "answerType": "short-text",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": true,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_027",
    "type": "scenario",
    "question": "You need to optimize a slow search in array. What’s the best step?",
    "options": ["Use binary search on sorted array", "Use linear search", "Switch to Python", "Ignore it"],
    "correctAnswer": "Use binary search on sorted array",
    "explanation": "Binary search reduces time from O(n) to O(log n).",
    "domain": "Data Structures & Algorithms",
    "careerTags": ["software_engineer"],
    "conceptTags": ["binary search", "optimization"],
    "skillTags": ["analysis"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_028",
    "type": "mcq",
    "question": "Which diagram is used to model classes and relationships?",
    "options": ["Sequence diagram", "Use Case diagram", "Class diagram", "Activity diagram"],
    "correctAnswer": "Class diagram",
    "explanation": "UML class diagrams show classes, attributes, methods, and relationships.",
    "domain": "Object-Oriented Programming",
    "careerTags": ["software_engineer"],
    "conceptTags": ["UML", "class diagrams"],
    "skillTags": ["design"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_029",
    "type": "debug",
    "question": "Fix this Python edge case check:\n```python\ndef safe_div(a,b): return a/b if b else None\n```",
    "correctAnswer": "Use `if b!=0` since 0 is Falsey; current code returns None incorrectly when b is 0 or None",
    "explanation": "Need explicit zero check rather than truthiness check.",
    "domain": "Problem Solving & Analytical Thinking",
    "careerTags": ["software_engineer"],
    "conceptTags": ["edge cases", "debugging"],
    "skillTags": ["debugging"],
    "difficulty": "Hard",
    "format": "code",
    "answerType": "short-text",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": true,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_030",
    "type": "short-answer",
    "question": "Write pseudo‑code for checking if a number is prime.",
    "correctAnswer": "Loop i from 2 to sqrt(n): if n % i == 0 return false; return true",
    "explanation": "Simple prime check uses divisibility test up to sqrt(n).",
    "domain": "Problem Solving & Analytical Thinking",
    "careerTags": ["software_engineer"],
    "conceptTags": ["pseudo-code", "algorithms"],
    "skillTags": ["analysis"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "short-text",
    "timeLimitSeconds": 120,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  }
]
