[
  {
    "id": "sd_001",
    "type": "mcq",
    "question": "Which Git workflow involves feature branches merged back via pull requests into main?",
    "options": ["GitFlow", "Trunk-based", "Forking", "Patch-based"],
    "correctAnswer": "GitFlow",
    "explanation": "GitFlow uses feature branches that merge via PRs into develop/main.",
    "domain": "Version Control Systems",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["branching","GitFlow"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_002",
    "type": "mcq",
    "question": "What does `git rebase` do?",
    "options": ["Rewrites commit history onto a new base", "Creates a merge commit", "Clones a repo", "Deletes a branch"],
    "correctAnswer": "Rewrites commit history onto a new base",
    "explanation": "`rebase` applies commits on top of another branch, rewriting history.",
    "domain": "Version Control Systems",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["rebase","history rewriting"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_003",
    "type": "scenario",
    "question": "A PR has merge conflicts. How should you resolve it?",
    "options": ["Push force", "Rebase locally and resolve conflicts", "Delete the branch", "Ignore and merge"],
    "correctAnswer": "Rebase locally and resolve conflicts",
    "explanation": "Rebase and resolve conflicts locally keeps history clean.",
    "domain": "Version Control Systems",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["conflict resolution"],
    "skillTags": ["problem-solving"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_004",
    "type": "mcq",
    "question": "In a CI/CD pipeline, what stage typically runs tests?",
    "options": ["Build", "Test", "Deploy", "Monitor"],
    "correctAnswer": "Test",
    "explanation": "Tests validate code during the pipeline's Test stage.",
    "domain": "CI/CD Pipelines",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["build","test","deploy"],
    "skillTags": ["software engineering"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_005",
    "type": "mcq",
    "question": "Which CI tool uses YAML for pipeline configs and integrates with GitHub?",
    "options": ["Jenkins", "GitHub Actions", "CircleCI", "TeamCity"],
    "correctAnswer": "GitHub Actions",
    "explanation": "GitHub Actions uses YAML workflows housed in `.github/workflows/`.",
    "domain": "CI/CD Pipelines",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["YAML","GitHub Actions"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_006",
    "type": "scenario",
    "question": "Pipeline deploys faulty version to Prod; what's a safe rollback?",
    "options": ["Manually delete pods", "Use automated rollback feature", "Idle traffic", "Do nothing"],
    "correctAnswer": "Use automated rollback feature",
    "explanation": "Automated rollbacks restore last known good release safely.",
    "domain": "CI/CD Pipelines",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["rollback","deploy"],
    "skillTags": ["problem-solving"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_007",
    "type": "mcq",
    "question": "Which command builds a Docker image from a Dockerfile?",
    "options": ["docker run", "docker build", "docker push", "docker ps"],
    "correctAnswer": "docker build",
    "explanation": "`docker build -t name .` packages the image.",
    "domain": "Containers & Virtualization",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Dockerfile","docker build"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 35,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_008",
    "type": "scenario",
    "question": "Compose deploy works locally but not in production; what's missing?",
    "options": ["Kubernetes", "Docker Compose overrides", "Prod Dockerfile", "Local .env"],
    "correctAnswer": "Prod Dockerfile",
    "explanation": "Production needs a proper Dockerfile or override, not just compose.",
    "domain": "Containers & Virtualization",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["docker compose","dockerfile"],
    "skillTags": ["software engineering"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 55,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_009",
    "type": "mcq",
    "question": "What is a Kubernetes Pod?",
    "options": ["A single container", "A group of one or more containers with shared storage/network", "A VM", "A Docker command"],
    "correctAnswer": "A group of one or more containers with shared storage/network",
    "explanation": "Pods wrap containers sharing resources like network/IP :contentReference[oaicite:1]{index=1}.",
    "domain": "Containers & Virtualization",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Kubernetes","pods"],
    "skillTags": ["conceptual"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_010",
    "type": "mcq",
    "question": "Terraform uses which syntax language?",
    "options": ["JSON", "YAML", "HCL", "XML"],
    "correctAnswer": "HCL",
    "explanation": "Terraform uses HashiCorp Configuration Language (HCL) :contentReference[oaicite:2]{index=2}.",
    "domain": "Infrastructure as Code (IaC)",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Terraform","HCL"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_011",
    "type": "scenario",
    "question": "Terraform plan shows drift in CloudFormation-managed resources. Best fix?",
    "options": ["Import state", "Delete and recreate", "Ignore drift", "Use AWS CLI"],
    "correctAnswer": "Import state",
    "explanation": "Import drifted resources into Terraform state for sync.",
    "domain": "Infrastructure as Code (IaC)",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["state management","CloudFormation"],
    "skillTags": ["problem-solving"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_012",
    "type": "mcq",
    "question": "Terraform is considered cloud‑agnostic. What does that mean?",
    "options": [
      "It abstracts all cloud providers identically",
      "It supports multiple providers via plugins",
      "It only works with AWS",
      "It avoids using cloud APIs"
    ],
    "correctAnswer": "It supports multiple providers via plugins",
    "explanation": "Terraform supports many providers (AWS, Azure, GCP, etc.) via plugins, making it cloud‑agnostic :contentReference[oaicite:1]{index=1}.",
    "domain": "Infrastructure as Code (IaC)",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Terraform", "multi‑cloud"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_013",
    "type": "mcq",
    "question": "Which language does Terraform primarily use for configs?",
    "options": ["JSON", "YAML", "HCL", "XML"],
    "correctAnswer": "HCL",
    "explanation": "Terraform uses HashiCorp Configuration Language (HCL) as its main config language :contentReference[oaicite:2]{index=2}.",
    "domain": "Infrastructure as Code (IaC)",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Terraform", "HCL"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_014",
    "type": "scenario",
    "question": "Terraform plan shows drift on resources created via CloudFormation. What to do?",
    "options": ["Ignore drift", "Import the resource into Terraform state", "Destroy the resource", "Switch to CloudFormation"],
    "correctAnswer": "Import the resource into Terraform state",
    "explanation": "Import the resource so Terraform can manage it and reflect accurate state.",
    "domain": "Infrastructure as Code (IaC)",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Terraform import", "drift management"],
    "skillTags": ["problem‑solving"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_015",
    "type": "mcq",
    "question": "What is a Kubernetes Pod?",
    "options": [
      "A single container",
      "A VM virtual machine",
      "Group of containers sharing IP/storage",
      "Kubernetes config file"
    ],
    "correctAnswer": "Group of containers sharing IP/storage",
    "explanation": "A Pod is the smallest deployable unit: one or more containers sharing storage, network, namespace :contentReference[oaicite:3]{index=3}.",
    "domain": "Containers & Virtualization",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Kubernetes", "Pods"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_016",
    "type": "scenario",
    "question": "You need to scale a service running in pods. What Kubectl command?",
    "options": [
      "kubectl scale deployment my-app --replicas=3",
      "kubectl run pod",
      "kubectl expose deployment",
      "kubectl apply"
    ],
    "correctAnswer": "kubectl scale deployment my-app --replicas=3",
    "explanation": "Use `scale` to adjust replica count of a Deployment.",
    "domain": "Containers & Virtualization",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Kubernetes", "scaling"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_017",
    "type": "mcq",
    "question": "What AWS service is best for object storage?",
    "options": ["EC2", "EBS", "S3", "RDS"],
    "correctAnswer": "S3",
    "explanation": "Amazon S3 is designed for scalable object storage.",
    "domain": "Cloud Platforms",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["AWS", "S3"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_018",
    "type": "scenario",
    "question": "Your EC2 instance is public and vulnerable. What’s your first fix?",
    "options": [
      "Add to public subnet", 
      "Attach security group that restricts access",
      "Make it bigger instance",
      "Ignore"
    ],
    "correctAnswer": "Attach security group that restricts access",
    "explanation": "Implement least privilege by limiting inbound traffic via security groups.",
    "domain": "Cloud Platforms",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["AWS", "security groups"],
    "skillTags": ["security"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 55,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_019",
    "type": "mcq",
    "question": "Which tool is popular for monitoring metrics via exporters and alerting?",
    "options": ["Jenkins", "Prometheus", "Grafana", "ELK Stack"],
    "correctAnswer": "Prometheus",
    "explanation": "Prometheus scrapes metrics and supports alerting.",
    "domain": "Monitoring & Logging",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Prometheus", "metrics"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_020",
    "type": "scenario",
    "question": "Your CI/CD pipeline needs to pull secrets. Secure approach?",
    "options": [
      "Hardcode secrets in YAML", 
      "Use environment variables directly", 
      "Fetch from Vault or AWS Secrets Manager", 
      "Leave secrets public"
    ],
    "correctAnswer": "Fetch from Vault or AWS Secrets Manager",
    "explanation": "Use a centralized secrets tool to avoid leaks and manage rotation.",
    "domain": "Security & Compliance",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["secrets management"],
    "skillTags": ["security"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 55,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_021",
    "type": "mcq",
    "question": "In Ansible, what makes playbooks idempotent?",
    "options": [
      "Using roles only", 
      "Tasks declare state and are re‑runnable", 
      "Writing scripts", 
      "Using raw SSH"
    ],
    "correctAnswer": "Tasks declare state and are re‑runnable",
    "explanation": "Ansible tasks are declarative and can run multiple times without change.",
    "domain": "Configuration Management",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Ansible", "idempotency"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_022",
    "type": "scenario",
    "question": "A DNS record for a service fails. What layer should you check first?",
    "options": [
      "Application code", 
      "DNS zone & record config", 
      "CI pipeline", 
      "Local cache only"
    ],
    "correctAnswer": "DNS zone & record config",
    "explanation": "DNS issues often stem from misconfiguration in DNS records or zones.",
    "domain": "Networking for DevOps",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["DNS", "Troubleshooting"],
    "skillTags": ["problem‑solving"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single‑choice",
    "timeLimitSeconds": 55,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_023",
    "type": "mcq",
    "question": "Which practice helps avoid alert fatigue in Prometheus monitoring?",
    "options": [
      "Setting a single alert severity level",
      "Sending all alerts to everyone",
      "Using severity-based labels and limiting alerts",
      "Disabling alerts during peak hours"
    ],
    "correctAnswer": "Using severity-based labels and limiting alerts",
    "explanation": "Label alerts by severity and tune thresholds to reduce noise and focus on actionable issues :contentReference[oaicite:1]{index=1}.",
    "domain": "Monitoring & Logging",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Prometheus", "alerting"],
    "skillTags": ["software engineering"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 45,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_024",
    "type": "scenario",
    "question": "A disk usage alert fired for <20% free space across servers. What do you do first?",
    "options": [
      "Ignore it temporarily",
      "Investigate disk usage paths and clean up",
      "Reboot all servers",
      "Increase disk size immediately"
    ],
    "correctAnswer": "Investigate disk usage paths and clean up",
    "explanation": "Identify large files/logs and clean up to restore space before scaling :contentReference[oaicite:2]{index=2}.",
    "domain": "Monitoring & Logging",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["disk space", "alerting"],
    "skillTags": ["problem-solving"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_025",
    "type": "mcq",
    "question": "What does idempotency mean in Ansible playbooks?",
    "options": [
      "Playbooks never change system state",
      "Playbook yields same outcome when run multiple times",
      "Playbook always reports changed",
      "Ansible only runs once"
    ],
    "correctAnswer": "Playbook yields same outcome when run multiple times",
    "explanation": "Idempotent operations ensure consistent results across multiple runs :contentReference[oaicite:3]{index=3}.",
    "domain": "Configuration Management",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Ansible", "idempotency"],
    "skillTags": ["tool familiarity"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_026",
    "type": "scenario",
    "question": "Your Ansible playbook always shows changed on every run. Likely cause?",
    "options": [
      "Tasks are idempotent",
      "Use of shell/raw modules without changed_when",
      "Variables declared once",
      "Playbook has syntax errors"
    ],
    "correctAnswer": "Use of shell/raw modules without changed_when",
    "explanation": "Shell/raw default to changed=true unless you add `changed_when` logic :contentReference[oaicite:4]{index=4}.",
    "domain": "Configuration Management",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Ansible", "handlers"],
    "skillTags": ["debugging"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 50,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_027",
    "type": "mcq",
    "question": "Which layer handles SSL/TLS termination commonly in DevOps setups?",
    "options": [
      "Application code",
      "Load balancer or reverse proxy",
      "Database layer",
      "CI pipeline"
    ],
    "correctAnswer": "Load balancer or reverse proxy",
    "explanation": "SSL/TLS is typically terminated at the LB or proxy (Nginx, ELB) :contentReference[oaicite:5]{index=5}.",
    "domain": "Networking for DevOps",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["SSL","load balancer"],
    "skillTags": ["conceptual"],
    "difficulty": "Easy",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 40,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_028",
    "type": "scenario",
    "question": "An incident hits Prod at 2 AM. What’s part of a blameless postmortem?",
    "options": [
      "Publicly blame the on-call",
      "Document timeline, impact, and root cause",
      "Hide the issue",
      "Delete logs"
    ],
    "correctAnswer": "Document timeline, impact, and root cause",
    "explanation": "Blameless PMs focus on learning by reconstructing events and impact.",
    "domain": "Soft Skills & DevOps Culture",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["incident response","postmortem"],
    "skillTags": ["collaboration"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "single-choice",
    "timeLimitSeconds": 60,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_029",
    "type": "short-answer",
    "question": "Explain the difference between SRE and DevOps.",
    "correctAnswer": "SRE applies engineering to operations with error budgets, metrics, automation; DevOps focuses on culture and collaboration between Dev and Ops.",
    "explanation": "SRE is a specific implementation with SLIs/SLOs and error budgets; DevOps is broader cultural practice.",
    "domain": "Soft Skills & DevOps Culture",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["SRE","culture"],
    "skillTags": ["conceptual"],
    "difficulty": "Hard",
    "format": "text",
    "answerType": "short-text",
    "timeLimitSeconds": 120,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  },
  {
    "id": "sd_030",
    "type": "short-answer",
    "question": "Describe Agile & Scrum roles that DevOps engineers collaborate with.",
    "correctAnswer": "Roles like Dev, QA, Product Owner, Scrum Master; DevOps works with each on feature delivery, CI, quality.",
    "explanation": "DevOps bridge teams across the Agile process—scrums, sprints, QA, and ops.",
    "domain": "Soft Skills & DevOps Culture",
    "careerTags": ["dev_ops_engineer"],
    "conceptTags": ["Agile","Scrum"],
    "skillTags": ["collaboration"],
    "difficulty": "Medium",
    "format": "text",
    "answerType": "short-text",
    "timeLimitSeconds": 120,
    "scoreWeight": 1.0,
    "isVerified": true,
    "hasCodeBlock": false,
    "showCalculator": false,
    "allowSkip": false,
    "showOnReviewScreen": true
  }
]

